// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Month {
  JANUARY
  FEBRUARY
  MARCH
  APRIL
  MAY
  JUNE
  JULY
  AUGUST
  SEPTEMBER
  OCTOBER
  NOVEMBER
  DECEMBER
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  hashedPassword  String
  todo      Todo[]
  income    Income[]
  expenses  Expenses[]
  savings   Savings[]
  journal   Journal[]
  projects  Projects[]
  budget    Budget[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Todo {
  id        String   @id @default(cuid())
  title     String
  description String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])


  @@map("todos")
}

model Income {
  id        String   @id @default(cuid())
  title     String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("incomes")
}

model Expenses{
  id        String   @id @default(cuid())
  title     String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  user      User     @relation(fields: [userId], references: [id])


  @@map("expenses")
}

model Savings{
  id        String   @id @default(cuid())
  title     String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  bankName  String
  user      User     @relation(fields: [userId], references: [id])

  @@map("savings")
}

model Journal {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("journals")
}

model Projects {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("projects")
}

model Budget {
  id        String   @id @default(cuid())
  title     String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  month     Month
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("budgets")
}